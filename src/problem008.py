""" Largest product in a series
The four adjacent digits in the 1000-digit number that have the greatest
product are 9 x 9 x 8 x 9 = 5832.
Find the thirteen adjacent digits in the 1000-digit number that have the
greatest product. What is the value of this product?
"""

def main():
    """ Iterating over the number, we'll compare every 13-digit section
    white keep track of the largest.
    """
    num = '73167176531330624919225119674426574742355349194934'
    num += '96983520312774506326239578318016984801869478851843'
    num += '85861560789112949495459501737958331952853208805511'
    num += '12540698747158523863050715693290963295227443043557'
    num += '66896648950445244523161731856403098711121722383113'
    num += '62229893423380308135336276614282806444486645238749'
    num += '30358907296290491560440772390713810515859307960866'
    num += '70172427121883998797908792274921901699720888093776'
    num += '65727333001053367881220235421809751254540594752243'
    num += '52584907711670556013604839586446706324415722155397'
    num += '53697817977846174064955149290862569321978468622482'
    num += '83972241375657056057490261407972968652414535100474'
    num += '82166370484403199890008895243450658541227588666881'
    num += '16427171479924442928230863465674813919123162824586'
    num += '17866458359124566529476545682848912883142607690042'
    num += '24219022671055626321111109370544217506941658960408'
    num += '07198403850962455444362981230987879927244284909188'
    num += '84580156166097919133875499200524063689912560717606'
    num += '05886116467109405077541002256983155200055935729725'
    num += '71636269561882670428252483600823257530420752963450'
    result = 0
    for i in xrange(len(num)-13):
        result = max(reduce(lambda x, y: int(x)*int(y), num[i:i+13]), result)
    print result
if __name__ == '__main__':
    main()